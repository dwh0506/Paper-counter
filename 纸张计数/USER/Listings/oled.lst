C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\SYSTEM;..\HARDWARE
                    -;..\USER) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          
   5          //******************************************************************************/。
   6          #include "oled.h"
   7          //#include "stdlib.h"
   8          #include "oledfont.h"  
   9          #include  "intrins.h"
  10          #define nop _nop_();
  11          //#include "delay.h"
  12          //OLED的显存
  13          //存放格式如下.
  14          //[0]0 1 2 3 ... 127  
  15          //[1]0 1 2 3 ... 127  
  16          //[2]0 1 2 3 ... 127  
  17          //[3]0 1 2 3 ... 127  
  18          //[4]0 1 2 3 ... 127  
  19          //[5]0 1 2 3 ... 127  
  20          //[6]0 1 2 3 ... 127  
  21          //[7]0 1 2 3 ... 127    
  22          
  23          
  24          /**********************************************
  25          //IIC Start
  26          **********************************************/
  27          void IIC_Start()
  28          {
  29   1      
  30   1        OLED_SCLK_Set() ;
  31   1        OLED_SDIN_Set();
  32   1        OLED_SDIN_Clr();
  33   1        OLED_SCLK_Clr();
  34   1      }
  35          
  36          /**********************************************
  37          //IIC Stop
  38          **********************************************/
  39          void IIC_Stop()
  40          {
  41   1      OLED_SCLK_Set() ;
  42   1      //  OLED_SCLK_Clr();
  43   1        OLED_SDIN_Clr();
  44   1        OLED_SDIN_Set();
  45   1        
  46   1      }
  47          
  48          void  IIC_Wait_Ack()
  49          {
  50   1      
  51   1      
  52   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  53   1        //GPIOB->CRH |= 0x00080000;
  54   1      //  OLED_SDA = 1;
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 2   

  55   1      //  delay_us(1);
  56   1        //OLED_SCL = 1;
  57   1        //delay_us(50000);
  58   1      /*  while(1)
  59   1        {
  60   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  61   1          {
  62   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  63   1            //GPIOB->CRH |= 0x00030000;
  64   1            return;
  65   1          }
  66   1        }
  67   1      */
  68   1        OLED_SCLK_Set() ;
  69   1        OLED_SCLK_Clr();
  70   1      }
  71          /**********************************************
  72          // IIC Write byte
  73          **********************************************/
  74          
  75          void Write_IIC_Byte(unsigned char IIC_Byte)
  76          {
  77   1        unsigned char i;
  78   1        unsigned char m,da;
  79   1        da=IIC_Byte;
  80   1        OLED_SCLK_Clr();
  81   1        for(i=0;i<8;i++)    
  82   1        {
  83   2            m=da;
  84   2          //  OLED_SCLK_Clr();
  85   2          m=m&0x80;
  86   2          if(m==0x80)
  87   2          {OLED_SDIN_Set();}
  88   2          else OLED_SDIN_Clr();
  89   2            da=da<<1;
  90   2          OLED_SCLK_Set();
  91   2          OLED_SCLK_Clr();
  92   2          }
  93   1      
  94   1      
  95   1      }
  96          /**********************************************
  97          // IIC Write Command
  98          **********************************************/
  99          void Write_IIC_Command(unsigned char IIC_Command)
 100          {
 101   1         IIC_Start();
 102   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 103   1        IIC_Wait_Ack(); 
 104   1         Write_IIC_Byte(0x00);      //write command
 105   1        IIC_Wait_Ack(); 
 106   1         Write_IIC_Byte(IIC_Command); 
 107   1        IIC_Wait_Ack(); 
 108   1         IIC_Stop();
 109   1      }
 110          /**********************************************
 111          // IIC Write Data
 112          **********************************************/
 113          void Write_IIC_Data(unsigned char IIC_Data)
 114          {
 115   1         IIC_Start();
 116   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 3   

 117   1        IIC_Wait_Ack(); 
 118   1         Write_IIC_Byte(0x40);      //write data
 119   1        IIC_Wait_Ack(); 
 120   1         Write_IIC_Byte(IIC_Data);
 121   1        IIC_Wait_Ack(); 
 122   1         IIC_Stop();
 123   1      }
 124          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 125          {
 126   1        if(cmd)
 127   1            {
 128   2      
 129   2         Write_IIC_Data(dat);
 130   2         
 131   2          }
 132   1        else {
 133   2         Write_IIC_Command(dat);
 134   2          
 135   2        }
 136   1      
 137   1      
 138   1      }
 139          
 140          /********************************************
 141          // fill_Picture
 142          ********************************************/
 143          void fill_picture(unsigned char fill_Data)
 144          {
 145   1        unsigned char m,n;
 146   1        for(m=0;m<8;m++)
 147   1        {
 148   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 149   2          OLED_WR_Byte(0x00,0);   //low column start address
 150   2          OLED_WR_Byte(0x10,0);   //high column start address
 151   2          for(n=0;n<128;n++)
 152   2            {
 153   3              OLED_WR_Byte(fill_Data,1);
 154   3            }
 155   2        }
 156   1      }
 157          
 158          
 159          ///***********************Delay****************************************/
 160          //void Delay_50ms(unsigned int Del_50ms)
 161          //{
 162          //  unsigned int m;
 163          //  for(;Del_50ms>0;Del_50ms--)
 164          //    for(m=6245;m>0;m--);
 165          //}
 166          
 167          //void Delay_1ms(unsigned int Del_1ms)
 168          //{
 169          //  unsigned char j;
 170          //  while(Del_1ms--)
 171          //  { 
 172          //    for(j=0;j<123;j++);
 173          //  }
 174          //}
 175          
 176          //坐标设置
 177          
 178            void OLED_Set_Pos(unsigned char x, unsigned char y) 
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 4   

 179          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 180   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 181   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 182   1      }       
 183          //开启OLED显示    
 184          void OLED_Display_On(void)
 185          {
 186   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 187   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 188   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 189   1      }
 190          //关闭OLED显示     
 191          void OLED_Display_Off(void)
 192          {
 193   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 194   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 195   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 196   1      }            
 197          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 198          void OLED_Clear(void)  
 199          {  
 200   1        unsigned char i,n;        
 201   1        for(i=0;i<8;i++)  
 202   1        {  
 203   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 204   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 205   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 206   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 207   2        } //更新显示
 208   1      }
 209          void OLED_On(void)  
 210          {  
 211   1        unsigned char i,n;        
 212   1        for(i=0;i<8;i++)  
 213   1        {  
 214   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 215   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 216   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 217   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 218   2        } //更新显示
 219   1      }
 220          //在指定位置显示一个字符,包括部分字符
 221          //x:0~127
 222          //y:0~63
 223          //mode:0,反白显示;1,正常显示         
 224          //size:选择字体 16/12 
 225          void OLED_ShowChar(unsigned char x,unsigned char y,unsigned char chr,unsigned char Char_Size)
 226          {       
 227   1        unsigned char c=0,i=0;  
 228   1          c=chr-' ';//得到偏移后的值      
 229   1          if(x>Max_Column-1){x=0;y=y+2;}
 230   1          if(Char_Size ==16)
 231   1            {
 232   2            OLED_Set_Pos(x,y);  
 233   2            for(i=0;i<8;i++)
 234   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 235   2            OLED_Set_Pos(x,y+1);
 236   2            for(i=0;i<8;i++)
 237   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 238   2            }
 239   1            else {  
 240   2              OLED_Set_Pos(x,y);
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 5   

 241   2              for(i=0;i<6;i++)
 242   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 243   2              
 244   2            }
 245   1      }
 246          //m^n函数
 247          unsigned int oled_pow(unsigned char m,unsigned char n)
 248          {
 249   1        unsigned int result=1;   
 250   1        while(n--)result*=m;    
 251   1        return result;
 252   1      }         
 253          //显示2个数字
 254          //x,y :起点坐标  
 255          //len :数字的位数
 256          //size:字体大小
 257          //mode:模式 0,填充模式;1,叠加模式
 258          //num:数值(0~4294967295);       
 259          void OLED_ShowNum(unsigned char x,unsigned char y,unsigned int num,unsigned char len,unsigned char size2)
 260          {           
 261   1        unsigned char t,temp;
 262   1        unsigned char enshow=0;              
 263   1        for(t=0;t<len;t++)
 264   1        {
 265   2          temp=(num/oled_pow(10,len-t-1))%10;
 266   2          if(enshow==0&&t<(len-1))
 267   2          {
 268   3            if(temp==0)
 269   3            {
 270   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 271   4              continue;
 272   4            }else enshow=1; 
 273   3             
 274   3          }
 275   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 276   2        }
 277   1      } 
 278          //显示一个字符号串
 279          void OLED_ShowString(unsigned char x,unsigned char y,unsigned char *chr,unsigned char Char_Size)
 280          {
 281   1        unsigned char j=0;
 282   1        while (chr[j]!='\0')
 283   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 284   2            x+=8;
 285   2          if(x>120){x=0;y+=2;}
 286   2            j++;
 287   2        }
 288   1      }
 289          //显示汉字
 290          void OLED_ShowCHinese(unsigned char x,unsigned char y,unsigned char no)
 291          {               
 292   1        unsigned char t,adder=0;
 293   1        OLED_Set_Pos(x,y);  
 294   1          for(t=0;t<16;t++)
 295   1          {
 296   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 297   2              adder+=1;
 298   2           }  
 299   1          OLED_Set_Pos(x,y+1);  
 300   1          for(t=0;t<16;t++)
 301   1            { 
 302   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 6   

 303   2              adder+=1;
 304   2            }         
 305   1      }
 306          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 307          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 308          {   
 309   1       unsigned int j=0;
 310   1       unsigned char x,y;
 311   1        
 312   1        if(y1%8==0) y=y1/8;      
 313   1        else y=y1/8+1;
 314   1        for(y=y0;y<y1;y++)
 315   1        {
 316   2          OLED_Set_Pos(x0,y);
 317   2          for(x=x0;x<x1;x++)
 318   2            {      
 319   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 320   3            }
 321   2        }
 322   1      } 
 323          
 324          //初始化SSD1306             
 325          void OLED_Init(void)
 326          {   
 327   1       
 328   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 329   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 330   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 331   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 332   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 333   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 334   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 335   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 336   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 337   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 338   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 339   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 340   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 341   1        OLED_WR_Byte(0x00,OLED_CMD);//
 342   1        
 343   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 344   1        OLED_WR_Byte(0x80,OLED_CMD);//
 345   1        
 346   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 347   1        OLED_WR_Byte(0x05,OLED_CMD);//
 348   1        
 349   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 350   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 351   1        
 352   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 353   1        OLED_WR_Byte(0x12,OLED_CMD);//
 354   1        
 355   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 356   1        OLED_WR_Byte(0x30,OLED_CMD);//
 357   1        
 358   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 359   1        OLED_WR_Byte(0x14,OLED_CMD);//
 360   1        
 361   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 362   1      }  
C51 COMPILER V9.55   OLED                                                                  10/28/2019 08:38:23 PAGE 7   

 363          
 364          
 365          void OLED_PaperNumTitle()//纸张计数，显示标题等
 366          {
 367   1                  //第一行显示 纸张计数 
 368   1                  OLED_ShowCHinese(0,0,0);            
 369   1                  OLED_ShowCHinese(16,0,1);
 370   1                  OLED_ShowCHinese(32,0,2); 
 371   1                  OLED_ShowCHinese(48,0,3); 
 372   1                  OLED_ShowCHinese(64,0,4); 
 373   1                  OLED_ShowCHinese(80,0,5); 
 374   1                  
 375   1                  //第二行显示 校准   
 376   1                  OLED_ShowCHinese(0,2,10); 
 377   1                  OLED_ShowCHinese(16,2,11);
 378   1                  OLED_ShowString(32,2,": ",16);
 379   1                  OLED_ShowString(72,2," ",16);           
 380   1                  OLED_ShowCHinese(80,2,1); 
 381   1                  OLED_ShowString(96,2," ",16); 
 382   1                  OLED_ShowString(104,2," ",16);  
 383   1                  
 384   1                //第三行显示 计数   
 385   1                  OLED_ShowCHinese(0,4,2);  
 386   1                  OLED_ShowCHinese(16,4,3);   
 387   1                  OLED_ShowString(32,4,": ",16);
 388   1                  OLED_ShowString(72,4," ",16);           
 389   1                  OLED_ShowCHinese(80,4,1); 
 390   1                  OLED_ShowString(96,4," ",16); 
 391   1                  OLED_ShowString(104,4," ",16);  
 392   1      
 393   1                //第四行显示通道采样值  
 394   1                  OLED_ShowString(0,6,"CH1:",16); 
 395   1        
 396   1        
 397   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1419    ----
   CONSTANT SIZE    =   3874    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
